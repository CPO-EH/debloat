import pefile
from typing import Callable, Optional, Tuple

def human_size(value: int) -> str: ...
def write_patched_file(out_path: str, pe: pefile.PE, end_of_real_data: int) -> Tuple[int, str]: ...
def handle_signature_abnormality(signature_address: int, signature_size: int, beginning_file_size: int) -> bool: ...
def check_for_packer(pe: pefile.PE) -> int: ...
def find_last_section(pe: pefile.PE) -> Optional[pefile.SectionStructure]: ...
def remove_signature(pe: pefile.PE) -> Tuple[int, int]: ...
def process_pe(pe: pefile.PE, out_path: str, log_message: Callable[[str], None]) -> None: ...
